AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo

  Sample SAM Template for todo

Globals:
  Function:
    Runtime: python3.7
    Environment:
      Variables:
        TODO_TBL: !Ref TodoTBL
        AUTH_TBL: !Ref AuthTBL
  Api:
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"

Resources:
  TodoTBL:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: TODO_TABLE
      AttributeDefinitions:
        - AttributeName: login_token
          AttributeType: S
        - AttributeName: todo_id
          AttributeType: S
      KeySchema:
        - AttributeName: login_token
          KeyType: HASH
        - AttributeName: todo_id
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  AuthTBL:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: AUTH_TABLE
      AttributeDefinitions:
        - AttributeName: login_id
          AttributeType: S
      KeySchema:
        - AttributeName: login_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: auth.lambda_handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref AuthTBL
      Events:
        Auth:
          Type: Api
          Properties:
            Path: /auth
            Method: post

  AuthCreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: auth_create.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref AuthTBL
      Events:
        AuthCreate:
          Type: Api
          Properties:
            Path: /auth/create
            Method: post

  GetMyToDoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: get_mytodo.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTBL
      Events:
        GetMyToDo:
          Type: Api
          Properties:
            Path: /todos
            Method: post

  CreateMyToDoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: create_mytodo.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTBL
      Events:
        CreateMyTodo:
          Type: Api
          Properties:
            Path: /todos/create
            Method: post

  UpdateMyToDoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: update_mytodo.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTBL
      Events:
        UpdateMyToDo:
          Type: Api
          Properties:
            Path: /todos
            Method: put

  DeleteMyToDoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: delete_mytodo.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTBL
      Events:
        DeleteMyToDo:
          Type: Api
          Properties:
            Path: /todos
            Method: delete

  SearchMyToDoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: todo_api/
      Handler: search_mytodo.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TodoTBL
      Events:
        SearchMyToDo:
          Type: Api
          Properties:
            Path: /todos/search
            Method: post

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ToDoAplApi:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com"
